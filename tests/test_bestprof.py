import numpy as np

from pathlib import Path
from deepdiff import DeepDiff
from tempfile import NamedTemporaryFile
from priwo import read_bestprof, write_bestprof

fname = "test_PSR_J1646-2142.bestprof"

fdata = {
    "fname": "J1646-2142_500_200_512_2.15jul2k19.raw0.fil",
    "candname": "PSR_1646-2142",
    "telescope": "GMRT",
    "eptopo": 58679.6856653963,
    "epbary": None,
    "tsamp": 1.024e-05,
    "nsamp": 263664000.0,
    "davg": 11042.9913182359,
    "dstd": 246.537468521724,
    "nbins": 128.0,
    "profavg": 22747152667.3743,
    "profstd": 353837.098935206,
    "chisqr": 106.001,
    "nsigma": 112.9,
    "dm": 29.741,
    "ptopo": 5.85347537656615,
    "ptopo_err": 5.16e-08,
    "pdtopo": -0.0,
    "pdtopo_err": 1.48e-13,
    "pddtopo": 0.0,
    "pddtopo_err": 3.55e-16,
    "pbary": None,
    "pdbary": None,
    "pddbary": None,
    "porb": None,
    "asinc": None,
    "eccen": None,
    "wrad": None,
    "tperi": None,
    "data": np.asarray(
        [
            2.274448e10,
            2.274387e10,
            2.274407e10,
            2.274434e10,
            2.274426e10,
            2.274443e10,
            2.274413e10,
            2.274457e10,
            2.274456e10,
            2.274414e10,
            2.274449e10,
            2.274425e10,
            2.274422e10,
            2.274493e10,
            2.274423e10,
            2.274431e10,
            2.274468e10,
            2.274435e10,
            2.274494e10,
            2.274472e10,
            2.274447e10,
            2.274442e10,
            2.274458e10,
            2.274484e10,
            2.274548e10,
            2.274551e10,
            2.274534e10,
            2.274512e10,
            2.274574e10,
            2.274579e10,
            2.274511e10,
            2.274561e10,
            2.274531e10,
            2.274449e10,
            2.274533e10,
            2.274572e10,
            2.274530e10,
            2.274533e10,
            2.274549e10,
            2.274473e10,
            2.274471e10,
            2.274452e10,
            2.274548e10,
            2.274569e10,
            2.274558e10,
            2.274558e10,
            2.274629e10,
            2.274659e10,
            2.274679e10,
            2.274627e10,
            2.274669e10,
            2.274860e10,
            2.274862e10,
            2.274957e10,
            2.275093e10,
            2.275130e10,
            2.275209e10,
            2.275344e10,
            2.275462e10,
            2.275635e10,
            2.275708e10,
            2.275796e10,
            2.275842e10,
            2.275846e10,
            2.275808e10,
            2.275682e10,
            2.275543e10,
            2.275422e10,
            2.275298e10,
            2.275210e10,
            2.275152e10,
            2.274946e10,
            2.274909e10,
            2.274845e10,
            2.274771e10,
            2.274703e10,
            2.274676e10,
            2.274587e10,
            2.274620e10,
            2.274559e10,
            2.274462e10,
            2.274520e10,
            2.274479e10,
            2.274500e10,
            2.274572e10,
            2.274506e10,
            2.274566e10,
            2.274544e10,
            2.274619e10,
            2.274546e10,
            2.274595e10,
            2.274653e10,
            2.274656e10,
            2.274696e10,
            2.274689e10,
            2.274802e10,
            2.274805e10,
            2.274831e10,
            2.274924e10,
            2.274956e10,
            2.274970e10,
            2.275046e10,
            2.275078e10,
            2.274968e10,
            2.274894e10,
            2.274943e10,
            2.274789e10,
            2.274758e10,
            2.274711e10,
            2.274681e10,
            2.274625e10,
            2.274629e10,
            2.274546e10,
            2.274607e10,
            2.274610e10,
            2.274570e10,
            2.274588e10,
            2.274594e10,
            2.274588e10,
            2.274561e10,
            2.274525e10,
            2.274523e10,
            2.274527e10,
            2.274486e10,
            2.274480e10,
            2.274452e10,
            2.274426e10,
            2.274392e10,
        ],
        dtype=np.float32,
    ),
}


def test_read_bestprof(datadir):

    """
    Test reading in a `*.bestprof` file.
    """

    bestprof = read_bestprof(datadir.joinpath(fname))
    assert DeepDiff(fdata, bestprof) == {}


def test_write_bestprof(datadir):

    """
    Test writing out a `*.bestprof` file.
    """

    with NamedTemporaryFile(suffix=".bestprof") as tfobj:
        write_bestprof(
            read_bestprof(datadir.joinpath(fname)),
            Path(tfobj.name),
        )
        bestprof = read_bestprof(tfobj.name)
        assert DeepDiff(fdata, bestprof) == {}
